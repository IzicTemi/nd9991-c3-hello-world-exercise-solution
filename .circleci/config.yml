# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

commands:
  # Exercise: Reusable Job Code
  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run: echo << parameters.id >>

  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}


jobs:

  config-aws:
    executor: aws-cli/default
    steps:
    - checkout
    - aws-cli/install
    - aws-cli/setup:
        profile-name: "default"

  save-ip:
    docker:
      - image: amazon/aws-cli
    
    steps:
      - checkout
      - run:
          command: | 
            mkdir ~/test
            cd ~/test
            echo "[all]" >> inventory.txt
            sudo yum install tar
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters "Name=tag:Project,Values=udacity" \
            --output text >> inventory.txt
      - persist_to_workspace:
          root: ~/test
          paths:
            - inventory.txt
          
      



workflows:
  # Name the workflow "welcome"
  my_workflow:
    # Run the welcome/run job in its own container
    jobs:
      # - welcome/run
      - config-aws
      - save-ip:
          requires:
           - config-aws